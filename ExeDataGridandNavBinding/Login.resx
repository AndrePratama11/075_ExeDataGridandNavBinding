<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCAHMAuADASIAAhEBAxEB/8QA
        GwABAQACAwEAAAAAAAAAAAAAAAEFBgIDBAf/xAAaAQEAAgMBAAAAAAAAAAAAAAAAAQQCAwUG/9oADAMB
        AAIQAxAAAAHb0WedUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQVBUFQV
        BUFQVBUFQW8aQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACykAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAspAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKQAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAspAAAAAAAAAAAAAAAAAAAAAFEURRFEAAAAAAAAAAAAAAAAAAAAspAAAAAAAAAAAAAAAAAAACh
        AUAkCKRKgUQAAAAAAAAAAAAAAAAACykAAAAAAAAAAAAAAAAAAKIoImoQABUFSpixFikAAAAAAAAAAAAA
        AAAAspAAAAAAAAAAAAAAAAACiKCJBB5/Vjs4vP6MsAQYXC6elujEZfbRqWcJUQWAAAAAAAAAAAAAAAAC
        ykAAAAAAAAAAAAAAAAAspLKIA8bL1ev5nv8AW6nYLPJA1zZcXotL1GQ3L553YW/o9w2Yv+QsqcEEAAAA
        AAAAAAAAAAAALKQAAAAAAAAAAAAAAAABYUJgQ0fdPnVbr7Vn8fkNtINlUDD6ZtGUp+jzmq6lmMN+38y/
        5WhMsqIAAAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAssKEwIl54yt0/V3antmWAb+eAw2ZwWFrU9pznK
        v1eQt8ChMsqIAAAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAFCVM6+zgYzTvouap9rrweexO2iG+kA1HZ
        NJrdvLbV5PXu5oZ1qEyogAAAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAWBYLKTxnLrx2fN/qLordXkLf
        FHkTqHj2nsp+mzIueYWVKWIssAAAAAAAAAAAAAAAAFlIAAAAAAAAAAAAAAAAACxQlSlECAAACgRKogAA
        AAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAAAsUIKEpacbYAEIVAAAAAAAAAAAAAAAAAABZSAAAAAAAAA
        AAAAAAAAAAAqAoiiKIoIAAAAAAAAAAAAAAAAAAAFlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABZSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWUgAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZSAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAWUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        WU//xAAoEAABAwMCBwACAwAAAAAAAAABAgMEMVBgBRAAERITFCBBITQiJDL/2gAIAQEAAQUCxsY4K42K
        42K42K42K42K42K42K42K42K42K42K23nxztorbeVuFcbFcbFbPS6CuNitqShalJZdWGf876o+plqMmc
        tMKZ37SK2P57aO6FSJzncX6a0P4aZNjeBLkB2bGeD7FnFbGdvu8t4R2NMkutTEJ6R6ai33IfBQpPDUl1
        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
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMcMMMM
        sMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNuccoY/OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMNsfaMMMP58sMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMOv6M4IMMvZsMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMM8sQkMMQguI8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMPMIMIMMP+KMIMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMIMo4sNfMMIMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMPM4l1cM
        NeIMocMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd+pRYMcmN6cMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMOcIoMMMNdpcMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNM9uIIYas+MMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMNOMMMPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMP//EACYR
        AAIBAgUDBQEAAAAAAAAAAAERIQAxEEFQUXFhgcFggJCR8KH/2gAIAQMBAT8Q9wr04KIXoGIwMxboMmek
        KidIMv2Wxz0kBGyYHNNc2T+I/ZBWJIeTMTAbcg084uyTBAGZ3twyKBErg0gQti/3aaRpYJLh42+OWCug
        svKZkVYCEB3Ezup+9JNQQ4KeeRXFFEhAAc2KDBWxeJbw8Sg8AF3EMn3L0hHspdwWciWt6uSzM5vPEOXC
        VsSgdg2dqAS2jgPJuepOknEIdRvQom66CIgYCARTzoomMDhoZV5OZMbL00qXwf8A/8QAJREBAAIBBAEC
        BwAAAAAAAAAAAQARIRAxQVCxYfBRYHGAkKHB/9oACAECAQE/EPuzSu4Nl6YcV9JeDHUgLdpnvhdXqm54
        iLxyhjYeoShuz6Ma3o0ff7hHOfHUmzmIRWe71YW/Bh5u396husQ9hY8BqQ3z4SlHfnqRojDN3otFxBTN
        mPT5auX11/gR/8QAKhABAAECAwgCAgMBAAAAAAAAAREAITGh8RBBUFFgYXGxgZEgwdHh8DD/2gAIAQEA
        AT8Q1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrW
        GtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrW
        GtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrWGtYa1hrW
        GtYa1hruoN/fpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvpzMHvhQKgFagY
        HgvUjBPlqe4HxXcruqnvF5CpMfq1JhCiYj54TmD3wgFYCWo5h5H80iRgcjDaNgn4rsZldo+yksV9bUwN
        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
</value>
  </data>
</root>